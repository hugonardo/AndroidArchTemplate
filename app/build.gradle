apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: rootProject.file('buildsystem/fabric.gradle')
apply plugin: 'com.getkeepsafe.dexcount'

android {
    def applicationConfig = rootProject.ext.applicationConfig

    compileSdkVersion applicationConfig.compileSdkVersion

    defaultConfig {
        applicationId applicationConfig.id
        minSdkVersion applicationConfig.minSdkVersion
        targetSdkVersion applicationConfig.targetSdkVersion

        versionCode applicationConfig.versionCode
        versionName applicationConfig.versionName

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    signingConfigs {
        debug {
            keyAlias "androiddebugkey"
            keyPassword "android"
            storePassword "android"
            storeFile rootProject.file("buildsystem/debug.keystore")
        }
        release {
            keyAlias "androiddebugkey"
            keyPassword "android"
            storePassword "android"
            storeFile rootProject.file("buildsystem/debug.keystore")
        }
    }

    buildTypes {
        defaultConfig {
            debuggable true
            minifyEnabled false
            matchingFallbacks = ['release']
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            all {
                jvmArgs '-noverify'
            }
        }
    }
}

dependencies {
    def dependencies = rootProject.ext

    // Core Product
    implementation project(":domain")
    implementation project(":data")
    implementation project(":presentation")
    implementation project(":providers:api")

    // Core Language
    implementation deps.kotlin.stdlib

    // AndroidX Support
    implementation deps.androidx.multidex
    implementation deps.androidx.appcompat

    // Dependence injection
    compileOnly deps.di.dagger.jsr250
    implementation deps.di.dagger.core
    implementation deps.di.dagger.android
    kapt deps.di.dagger.compiler
    kapt deps.di.dagger.androidCompiler

    // Development and debugging
    implementation deps.timber.core
    implementation deps.rx.logger
    debugImplementation deps.leakCanary.core
    releaseImplementation deps.leakCanary.noOp

    // Unit Tests
    testImplementation deps.kotlin.test
    testImplementation dependencies.testEngine.kotlinTest
    testImplementation deps.test.mock.mockk
}
